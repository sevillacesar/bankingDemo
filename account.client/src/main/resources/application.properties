spring.application.name=account.client
server.port=5000

##PARA USAR LOCALMENTE SE DEBE
##REEMPLAZAR ESTAS 3 LINEAS POR LAS QUE ESTAN PARAMETRIZADAS PARA CONTENEDOR
#spring.datasource.url=jdbc:mysql://host.docker.internal:3306/bankingClient?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=admin12345
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password= ${DATABASE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#spring.sql.init.mode=always
#spring.jpa.defer-datasource-initialization=true

spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE
spring.kafka.consumer.bootstrap-servers=host.docker.internal:9092
spring.kafka.consumer.group-id=bankaccConsumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

client.url=http://host.docker.internal:5001